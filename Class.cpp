#include"Class.h"
#include"Screen.h"
/*----------------------------------------------
*C_Screen
-----------------------------------------------*/
void C_Screen::InitScreen() // 게임 소개 화면
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                          ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                                          ┃");
	ScreenPrint(0, 5, "┃                                                          ┃");
	ScreenPrint(0, 6, "┃                  ┏━━━━━━━━┓                    ┃");
	ScreenPrint(0, 7, "┃                  ┃★ Sogo(쏘고) ★┃                    ┃");
	ScreenPrint(0, 8, "┃                  ┗━━━━━┳━━┛                    ┃");
	ScreenPrint(0, 9, "┃                      /)/)    ┃ ☆                       ┃");
	ScreenPrint(0, 10, "┃                   ★(*'')/                               ┃");
	ScreenPrint(0, 11, "┃                                                          ┃");
	ScreenPrint(0, 12, "┃                                                          ┃");
	ScreenPrint(0, 13, "┃                                                          ┃");
	ScreenPrint(0, 14, "┃                                                          ┃");
	ScreenPrint(0, 15, "┃                                                          ┃");
	ScreenPrint(0, 16, "┃                                                          ┃");
	ScreenPrint(0, 17, "┃           ┏━━━┓★ 스페이스 키를 눌러 주세요!!       ┃");
	ScreenPrint(0, 18, "┃           ┃┃┃┃┣┓                                   ┃");
	ScreenPrint(0, 19, "┃           ┗┻┻┻┻┛                                   ┃");
	ScreenPrint(0, 20, "┃                                                          ┃");
	ScreenPrint(0, 21, "┃                                                          ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
void C_Screen::ReadyScreen()
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                          ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                                          ┃");
	ScreenPrint(0, 5, "┃                                                          ┃");
	ScreenPrint(0, 6, "┃                                                          ┃");
	ScreenPrint(0, 7, "┃                                                          ┃");
	ScreenPrint(0, 8, "┃                                          ●              ┃");
	ScreenPrint(0, 9, "┃                                    ☜〓━┃┑            ┃");
	ScreenPrint(0, 10, "┃                                        ☜〓┛            ┃");
	ScreenPrint(0, 11, "┃                                        ┏┻┓            ┃");
	ScreenPrint(0, 12, "┃                                                          ┃");
	ScreenPrint(0, 13, "┃                                                          ┃");
	ScreenPrint(0, 14, "┃                                                          ┃");
	ScreenPrint(0, 15, "┃                                                          ┃");
	ScreenPrint(0, 16, "┃                                                          ┃");
	ScreenPrint(0, 17, "┃                                                          ┃");
	ScreenPrint(0, 18, "┃                                                          ┃");
	ScreenPrint(0, 19, "┃                                                          ┃");
	ScreenPrint(0, 20, "┃                                                          ┃");
	ScreenPrint(0, 21, "┃                                                          ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
void C_Screen::SuccessScreen()
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                          ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                                          ┃");
	ScreenPrint(0, 5, "┃                                                          ┃");
	ScreenPrint(0, 6, "┃                       *.   .*                            ┃");
	ScreenPrint(0, 7, "┃                    *.┏┓┏┓.*대                        ┃");
	ScreenPrint(0, 8, "┃                    ┏┻┫┣┻┓단                        ┃");
	ScreenPrint(0, 9, "┃                    ┃━┫┣━┃해                        ┃");
	ScreenPrint(0, 10, "┃                    ┃━┫┣━┃요~                       ┃");
	ScreenPrint(0, 11, "┃                    ┗━┛┗━┛                          ┃");
	ScreenPrint(0, 12, "┃                                                          ┃");
	ScreenPrint(0, 13, "┃                                                          ┃");
	ScreenPrint(0, 14, "┃                      You Win!!                           ┃");
	ScreenPrint(0, 15, "┃                                                          ┃");
	ScreenPrint(0, 16, "┃                                                          ┃");
	ScreenPrint(0, 17, "┃                                                          ┃");
	ScreenPrint(0, 18, "┃                                                          ┃");
	ScreenPrint(0, 19, "┃                                                          ┃");
	ScreenPrint(0, 20, "┃                                                          ┃");
	ScreenPrint(0, 21, "┃                                                          ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
void C_Screen::FailureScreen()
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                          ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                                          ┃");
	ScreenPrint(0, 5, "┃                                                          ┃");
	ScreenPrint(0, 6, "┃                                                          ┃");
	ScreenPrint(0, 7, "┃                     *┭┮  ┭┮*                         ┃");
	ScreenPrint(0, 8, "┃                  *.  ㅣㅣ▽ㅣㅣ   .*                     ┃");
	ScreenPrint(0, 9, "┃               ┏ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ┓                   ┃");
	ScreenPrint(0, 10, "┃               ┃     미션 실패      ┃                   ┃");
	ScreenPrint(0, 11, "┃               ┗ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ┛                   ┃");
	ScreenPrint(0, 12, "┃                                                          ┃");
	ScreenPrint(0, 13, "┃                                                          ┃");
	ScreenPrint(0, 14, "┃                   (*⌒⌒*)                               ┃");
	ScreenPrint(0, 15, "┃                  ┏O━━━O━━━━━━━━━━┓        ┃");
	ScreenPrint(0, 16, "┃                  ┃계속하시겠습니까? <y/n>     ┃        ┃");
	ScreenPrint(0, 17, "┃                  ┗━━━━━━━━━━━━━━┛        ┃");
	ScreenPrint(0, 18, "┃                                                          ┃");
	ScreenPrint(0, 19, "┃                                                          ┃");
	ScreenPrint(0, 20, "┃                                                          ┃");
	ScreenPrint(0, 21, "┃                                                          ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
void C_Screen::PlayerTalk()
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                          ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                       /| ━ // ━ |＼    ┃");
	ScreenPrint(0, 5, "┃                                      //q ●    ● p＼    ┃");
	ScreenPrint(0, 6, "┃                                        (┗┳━┳┛)      ┃");
	ScreenPrint(0, 7, "┃                                 우하하~   ┃ㅣ┃         ┃");
	ScreenPrint(0, 8, "┃                                           ┗━┛         ┃");
	ScreenPrint(0, 9, "┃           ┏┓━━━┏┓                                 ┃");
	ScreenPrint(0, 10, "┃           ┗┛ ┃ ┃┗┛                                 ┃");
	ScreenPrint(0, 11, "┃             ┃   ▽ ┃♡                                 ┃");
	ScreenPrint(0, 12, "┃              ━━━━                                    ┃");
	ScreenPrint(0, 13, "┃                                                          ┃");
	ScreenPrint(0, 14, "┃            :+:이번에는 너를 꼭 처단하리라:+:             ┃");
	ScreenPrint(0, 15, "┃                                                          ┃");
	ScreenPrint(0, 16, "┃                 :+: 받아라 나의 정의의 칼을  :+:         ┃");
	ScreenPrint(0, 17, "┃                                                          ┃");
	ScreenPrint(0, 18, "┃                                                          ┃");
	ScreenPrint(0, 19, "┃                                                          ┃");
	ScreenPrint(0, 20, "┃                                                          ┃");
	ScreenPrint(0, 21, "┃                                                          ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
void C_Screen::BossTalk()
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                          ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                                          ┃");
	ScreenPrint(0, 5, "┃           ┏┓━━━┏┓                                 ┃");
	ScreenPrint(0, 6, "┃           ┗┛ ┃ ┃┗┛                                 ┃");
	ScreenPrint(0, 7, "┃             ┃   ▽ ┃♡                                 ┃");
	ScreenPrint(0, 8, "┃              ━━━━                                    ┃");
	ScreenPrint(0, 9, "┃                                                          ┃");
	ScreenPrint(0, 10, "┃                                                          ┃");
	ScreenPrint(0, 11, "┃                                                          ┃");
	ScreenPrint(0, 12, "┃                                                          ┃");
	ScreenPrint(0, 13, "┃                                       /| ━ // ━ |＼    ┃");
	ScreenPrint(0, 14, "┃                                      //q ●    ● p＼    ┃");
	ScreenPrint(0, 15, "┃                                        (┗┳━┳┛)      ┃");
	ScreenPrint(0, 16, "┃                                       ~   ┃ㅣ┃         ┃");
	ScreenPrint(0, 17, "┃                                           ┗━┛         ┃");
	ScreenPrint(0, 18, "┃                 :+: 우하하 !!! 웃기는 구나               ┃");
	ScreenPrint(0, 19, "┃                                                          ┃");
	ScreenPrint(0, 20, "┃                        :+: 나를 상대하겠다고 ? 우하하    ┃");
	ScreenPrint(0, 21, "┃                                                          ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
void C_Screen::ScreenLine()
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                 +        ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                +                         ┃");
	ScreenPrint(0, 5, "┃                                                          ┃");
	ScreenPrint(0, 6, "┃     +                                                    ┃");
	ScreenPrint(0, 7, "┃                                                          ┃");
	ScreenPrint(0, 8, "┃                                                          ┃");
	ScreenPrint(0, 9, "┃                     +                    +               ┃");
	ScreenPrint(0, 10, "┃                                                          ┃");
	ScreenPrint(0, 11, "┃                                                          ┃");
	ScreenPrint(0, 12, "┃                                                          ┃");
	ScreenPrint(0, 13, "┃                                                          ┃");
	ScreenPrint(0, 14, "┃                                                          ┃");
	ScreenPrint(0, 15, "┃          +                                     +         ┃");
	ScreenPrint(0, 16, "┃                            +                             ┃");
	ScreenPrint(0, 17, "┃                                                          ┃");
	ScreenPrint(0, 18, "┃                                                          ┃");
	ScreenPrint(0, 19, "┃                                                          ┃");
	ScreenPrint(0, 20, "┃                                                          ┃");
	ScreenPrint(0, 21, "┃       +                               +                  ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
void C_Screen::ResultScreen()
{
	ScreenPrint(0, 0, "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	ScreenPrint(0, 1, "┃                                                          ┃");
	ScreenPrint(0, 2, "┃                                                          ┃");
	ScreenPrint(0, 3, "┃                                                          ┃");
	ScreenPrint(0, 4, "┃                                                          ┃");
	ScreenPrint(0, 5, "┃                                                          ┃");
	ScreenPrint(0, 6, "┃                                                          ┃");
	ScreenPrint(0, 7, "┃                                                          ┃");
	ScreenPrint(0, 8, "┃                  ┏━━━━━━━━┓                    ┃");
	ScreenPrint(0, 9, "┃                  ┃★   Sogo     ★┃                    ┃");
	ScreenPrint(0, 10, "┃                  ┗━━━━━┳━━┛                    ┃");
	ScreenPrint(0, 11, "┃                      /)/)    ┃ ☆                       ┃");
	ScreenPrint(0, 12, "┃                   ★(*'')/                               ┃");
	ScreenPrint(0, 13, "┃                                    총점 :                ┃");
	ScreenPrint(0, 14, "┃                                                          ┃");
	ScreenPrint(0, 15, "┃        ◈◈◈◈◈◈◈  Game Over  ◈◈◈◈◈◈◈         ┃");
	ScreenPrint(0, 16, "┃                                                          ┃");
	ScreenPrint(0, 17, "┃                                                          ┃");
	ScreenPrint(0, 18, "┃                                                          ┃");
	ScreenPrint(0, 19, "┃                                                          ┃");
	ScreenPrint(0, 20, "┃                                                          ┃");
	ScreenPrint(0, 21, "┃                                                          ┃");
	ScreenPrint(0, 22, "┃                                                          ┃");
	ScreenPrint(0, 23, "┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");
}
/*----------------------------------------------
*C_XY
-----------------------------------------------*/
int C_XY::getXY(int xy)
{
	if (xy == 1)
		return x;
	else if (xy == 2)
		return y;
}
void C_XY::setXY(int xy, int n)
{
	if (xy == 1)
		x = n;
	else if (xy == 2)
		y = n;
}
/*----------------------------------------------
*C_Normal
-----------------------------------------------*/

int C_Normal::getLi()
{
		return nLife;
	
}
void C_Normal::setLi(int n)
{
		nLife = n;
}
/*----------------------------------------------
*C_Enemy
-----------------------------------------------*/

C_Enemy::C_Enemy()
{
	nType = rand() % 4; // 임의의 패턴 선택

}
void C_Enemy::setAp(int t)
{
	AppearTime = t;
}
int C_Enemy::getAp()
{
	return AppearTime;
}
/*----------------------------------------------
*C_Clock
-----------------------------------------------*/

void C_Clock::M_setTime(int t, int i)
{
	if (i == 1)
	{
		MissileFireTime = t;
	}
	if (i == 2)
	{
		MissileOldTime = t;
	}
}
void C_Clock::setTime(int t, int i)
{
	if (i == 1)
	{
		MoveTime = t;
	}
	if (i == 2)
	{
		OldTime = t;
	}
	if (i == 3)
	{
		OldMoveTime = t;
	}
}
void C_Clock::F_setTime(int t, int i)
{
	if (i == 1)
	{
		FireTime = t;
	}
	if (i == 2)
	{
		OldFireTime = t;
	}
}
int C_Clock::M_getTime(int i)
{
	if (i == 1)
	{
		return MissileFireTime;
	}
	if (i == 2)
	{
		return MissileOldTime;
	}
}
int C_Clock::getTime(int i)
{
	if (i == 1)
	{
		return MoveTime;
	}
	if (i == 2)
	{
		return OldTime;
	}
	if (i == 3)
	{
		return OldMoveTime;
	}
}
int C_Clock::F_getTime( int i)
{
	if (i == 1)
	{
		return FireTime;
	}
	if (i == 2)
	{
		return OldFireTime ;
	}
}
/*----------------------------------------------
*C_nPat
-----------------------------------------------*/

void C_nPat::set_nPat(int n,int i)
{
	if(i==1)
	nPatType = n;
	else if(i==2)
	nPatStep = n;
	else if(i==3)
	nPatIndex = n;
}
int C_nPat::get_nPat(int i)
{
	if(i==1)
	return nPatType;
	else if(i==2)
	return nPatStep;
	else if(i==3)
	return nPatIndex;
}
/*----------------------------------------------
*C_BossMissile
-----------------------------------------------*/

void C_BossMissile::set_nDir(DIRECT n)
{
	nDirect = n;
}

/*----------------------------------------------
*C_Body
-----------------------------------------------*/
void C_Body::p_set(C_Body* p)
{
	next = p;
}
C_Body* C_Body::p_get()
{
	return next;
}
/*----------------------------------------------
*C_Snake
-----------------------------------------------*/

void C_Snake::set_op(int n, int sl)
{
	if (sl == 1)
		speed = n;
	else if (sl == 2)
		length = n;
}
void C_Snake::set_di(int n, int dl)
{
	if (dl = 1)
		direction = n;
	else if (dl == 2)
		last_direction = n;
}
int C_Snake::get_op(int sl)
{
	if (sl = 1)
		return speed;
	else if (sl == 2)
		return length;
}
int C_Snake::get_di(int dl)
{
	if (dl = 1)
		return direction;
	else if (dl == 2)
		return last_direction;
}
/*----------------------------------------------
*C_Show
-----------------------------------------------*/

int C_Show::show_gameover()
{
	C_Op::SetColor(RED);
	C_Op::gotoxy(15, 8);
	printf("┏━━━━━━━━━━━━━┓");
	C_Op::gotoxy(15, 9);
	printf("┃**************************┃");
	C_Op::gotoxy(15, 10);
	printf("┃*        GAME OVER       *┃");
	C_Op::gotoxy(15, 11);
	printf("┃**************************┃");
	C_Op::gotoxy(15, 12);
	printf("┗━━━━━━━━━━━━━┛");

	Sleep(1000);

	getche();
	fflush(stdin);
	fflush(stdout);
	system("cls");
	return 0;
}
int C_Show::show_game_frame(int y)
{
	int i;
	C_Op::SetColor(GRAY);
	system("cls");
	C_Op::gotoxy(0, 1);
	printf("┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓");
	for (i = 2; i<22; i++)
	{
		C_Op::gotoxy(0, i);
		printf("┃");
		C_Op::gotoxy(72, i);
		printf("┃");
	}
	C_Op::gotoxy(0, 20 + y);
	printf("┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛");

	for (i = 4; i<20; i += 2)
	{
		C_Op::gotoxy(76, i);
		printf("○");
	}

	for (i = 5; i<20; i += 2)
	{
		C_Op::gotoxy(75, i);
		printf("○");
	}
	C_Op::gotoxy(75, 2);
	printf("Ｙ");
	C_Op::gotoxy(75, 3);
	printf("●");

	C_Op::gotoxy(4, 0);
	printf("Snake Ver 0.1                                    Made By Jae-Dong");
	return 0;
}
/*----------------------------------------------
*C_Op
-----------------------------------------------*/

int C_Op::gotoxy(int x, int y)
{
	HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD pos;
	pos.Y = y;
	pos.X = x;
	SetConsoleCursorPosition(hConsole, pos);
	return 0;
}
void C_Op::SetColor(int color)

{
	static HANDLE std_output_handle = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(std_output_handle, color);

}
